import requests
import os
from dotenv import load_dotenv

load_dotenv()

API_KEY = os.getenv("SPOONACULAR_API_KEY")
BASE_URL = "https://api.spoonacular.com"

def get_recipes(diet, protein1, protein2):
    meals = []
    for meal_type in ["breakfast", "lunch", "dinner"]:
        params = {
            "apiKey": API_KEY,
            "diet": diet,
            "includeIngredients": f"{protein1},{protein2}",
            "number": 2,
            "type": meal_type
        }
        response = requests.get(f"{BASE_URL}/recipes/complexSearch", params=params)
        if response.status_code == 200:
            data = response.json()
            meals.extend(data.get("results", []))
        else:
            print(f"Failed to fetch {meal_type}: {response.status_code}")
    return meals

def get_grocery_list(recipe_ids):
    ids_str = ",".join(map(str, recipe_ids))
    params = {
        "apiKey": API_KEY,
        "includeNutrition": False
    }
    response = requests.get(f"{BASE_URL}/recipes/informationBulk?ids={ids_str}", params=params)
    ingredients = {}
    if response.status_code == 200:
        data = response.json()
        for recipe in data:
            for ing in recipe['extendedIngredients']:
                name = ing['name']
                amount = ing['amount']
                unit = ing['unit']
                if name in ingredients:
                    ingredients[name]['amount'] += amount
                else:
                    ingredients[name] = {"amount": amount, "unit": unit}
    return ingredients

def main():
    print("Welcome to the Weekly Meal Planner!")
    diet = input("Enter dietary preference (vegan, vegetarian, gluten free, etc.): ")
    protein1 = input("Enter first protein (e.g. chicken): ")
    protein2 = input("Enter second protein (e.g. fish): ")

    recipes = get_recipes(diet, protein1, protein2)
    if not recipes:
        print("No recipes found.")
        return

    print("\nMeals for the Week:")
    recipe_ids = []
    for i, recipe in enumerate(recipes, 1):
        print(f"{i}. {recipe['title']}")
        recipe_ids.append(recipe['id'])

    grocery = get_grocery_list(recipe_ids)
    print("\nOptimized Grocery List:")
    for item, info in grocery.items():
        print(f"- {item}: {info['amount']:.1f} {info['unit']}")

if __name__ == "__main__":
    main()


---

